<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BillDataCreditorDescr" xml:space="preserve">
    <value>Получает значение, представляющее структуру данных "Кредитор/Платный".</value>
  </data>
  <data name="BillDataDebtorDescr" xml:space="preserve">
    <value>Получает значение, представляющее структуру данных "Должник/Платный".</value>
  </data>
  <data name="BillDataPaymentAdditionalInfoDescr" xml:space="preserve">
    <value>Получает или устанавливает дополнительную информацию об оплате.</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure1Descr" xml:space="preserve">
    <value>Получает или устанавливает информацию для альтернативной процедуры 1.</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure2Descr" xml:space="preserve">
    <value>Получает или устанавливает информацию для альтернативной процедуры 2.</value>
  </data>
  <data name="BillDataPaymentAmountDescr" xml:space="preserve">
    <value>Получает или устанавливает сумму счета.</value>
  </data>
  <data name="BillDataPaymentCurrencyDescr" xml:space="preserve">
    <value>Получает или устанавливает валюту, используемую в купюре. Поддерживаемые значения: CHF/EUR. Значение по умолчанию: CHF.</value>
  </data>
  <data name="BillDataPaymentReferenceDescr" xml:space="preserve">
    <value>Получает или устанавливает номер платежной справки. Он может быть нулевым, когда тип ссылки установлен на NON.</value>
  </data>
  <data name="BillDataPaymentReferenceTypeDescr" xml:space="preserve">
    <value>Получает или устанавливает тип номера платежной справки. Поддерживаемые значения: ЗРР/SCOR/NON. Значение по умолчанию: NON.</value>
  </data>
  <data name="BillDataPaymentStructuredBillInfoDescr" xml:space="preserve">
    <value>Получает или устанавливает закодированную информацию для автоматического бронирования платежа.</value>
  </data>
  <data name="BillDataPaymentDescr" xml:space="preserve">
    <value>Получает значение, представляющее структуру данных "Платежная информация".</value>
  </data>
  <data name="BillDataPersonAddressDescr" xml:space="preserve">
    <value>Получает или устанавливает адресную информацию для кредитора/должника.</value>
  </data>
  <data name="BillDataPersonNameDescr" xml:space="preserve">
    <value>Получает или устанавливает имя кредитора/должника.</value>
  </data>
  <data name="BillDataDescr" xml:space="preserve">
    <value>Обязательным для создания штрих-кода, используемого в швейцарском законопроекте, является класс, представляющий поля данных.</value>
  </data>
  <data name="QuietZoneDescr" xml:space="preserve">
    <value>Получает или устанавливает значение, указывающее размер "тихой зоны" вокруг штрих-кода.</value>
  </data>
  <data name="ValidateBillDataDescr" xml:space="preserve">
    <value>Получает или устанавливает значение, указывающее, будут ли проверены поля данных Билла или нет.</value>
  </data>
  <data name="ValueFromBillDataDescr" xml:space="preserve">
    <value>Получает или устанавливает значение, указывающее, будет ли значение штрих-кода генерироваться из полей данных Билла или нет.</value>
  </data>
  <data name="BillDataCityDescr" xml:space="preserve">
    <value>Получает или устанавливает название города.</value>
  </data>
  <data name="BillDataCityDisplayName" xml:space="preserve">
    <value>Город</value>
  </data>
  <data name="BillDataCountryDescr" xml:space="preserve">
    <value>Получает или устанавливает название страны.</value>
  </data>
  <data name="BillDataCountryDisplayName" xml:space="preserve">
    <value>Страна</value>
  </data>
  <data name="BillDataCreditorDisplayName" xml:space="preserve">
    <value>кредитор</value>
  </data>
  <data name="BillDataDebtorDisplayName" xml:space="preserve">
    <value>должник</value>
  </data>
  <data name="BillDataDisplayName" xml:space="preserve">
    <value>Данные Билла</value>
  </data>
  <data name="BillDataHouseNumberDescr" xml:space="preserve">
    <value>Получает или устанавливает номер дома для структурированного адреса или адресной линии 2 для комбинированного адреса.</value>
  </data>
  <data name="BillDataHouseNumberDisplayName" xml:space="preserve">
    <value>Номер дома</value>
  </data>
  <data name="BillDataIBANDescr" xml:space="preserve">
    <value>Получает или устанавливает IBAN счета, что счет выплачивается.</value>
  </data>
  <data name="BillDataIBANDisplayName" xml:space="preserve">
    <value>ИБАН</value>
  </data>
  <data name="BillDataIBANTypeDescr" xml:space="preserve">
    <value>Получает или устанавливает тип IBAN счета, на который выплачивается счет. Поддерживаемые значения: IBAN/ЗРИБАН. Значение по умолчанию: IBAN.</value>
  </data>
  <data name="BillDataIBANTypeDisplayName" xml:space="preserve">
    <value>IBANType</value>
  </data>
  <data name="BillDataPaymentAdditionalInfoDisplayName" xml:space="preserve">
    <value>Дополнительная информация</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure1DisplayName" xml:space="preserve">
    <value>Альтернативная процедура1</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure2DisplayName" xml:space="preserve">
    <value>Альтернативная процедура2</value>
  </data>
  <data name="BillDataPaymentAmountDisplayName" xml:space="preserve">
    <value>Сумма</value>
  </data>
  <data name="BillDataPaymentCurrencyDisplayName" xml:space="preserve">
    <value>Валюта</value>
  </data>
  <data name="BillDataPaymentDisplayName" xml:space="preserve">
    <value>Оплата</value>
  </data>
  <data name="BillDataPaymentReferenceDisplayName" xml:space="preserve">
    <value>ссылка</value>
  </data>
  <data name="BillDataPaymentReferenceTypeDisplayName" xml:space="preserve">
    <value>Тип ссылки</value>
  </data>
  <data name="BillDataPaymentStructuredBillInfoDisplayName" xml:space="preserve">
    <value>Структурированный Билл Информация</value>
  </data>
  <data name="BillDataPersonAddressDisplayName" xml:space="preserve">
    <value>Адрес</value>
  </data>
  <data name="BillDataPersonNameDisplayName" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="BillDataPostalCodeDescr" xml:space="preserve">
    <value>Получает или устанавливает почтовый индекс.</value>
  </data>
  <data name="BillDataPostalCodeDisplayName" xml:space="preserve">
    <value>почтовый индекс</value>
  </data>
  <data name="BillDataStreetDescr" xml:space="preserve">
    <value>Получает или устанавливает название улицы для структурированного адреса или адресной линии 1 для комбинированного адреса.</value>
  </data>
  <data name="BillDataStreetDisplayName" xml:space="preserve">
    <value>Улица</value>
  </data>
  <data name="Encoder1DShowTextDescr" xml:space="preserve">
    <value>Уточняется, должен ли штрих-код отображать текст вместе с барами.</value>
  </data>
  <data name="Encoder1DShowTextDisplayName" xml:space="preserve">
    <value>Показать текст</value>
  </data>
  <data name="Pdf417EncoderColumnsDescr" xml:space="preserve">
    <value>Получает или устанавливает количество столбцов.</value>
  </data>
  <data name="Pdf417EncoderColumnsDisplayName" xml:space="preserve">
    <value>Столбцы</value>
  </data>
  <data name="Pdf417EncoderECLDescr" xml:space="preserve">
    <value>Получает или устанавливает уровень коррекции ошибок.</value>
  </data>
  <data name="Pdf417EncoderECLDisplayName" xml:space="preserve">
    <value>Уровень коррекции ошибок</value>
  </data>
  <data name="Pdf417EncoderEncodingDescr" xml:space="preserve">
    <value>Получает или устанавливает режим кодирования.</value>
  </data>
  <data name="Pdf417EncoderEncodingDisplayName" xml:space="preserve">
    <value>кодировка</value>
  </data>
  <data name="Pdf417EncoderRowsDescr" xml:space="preserve">
    <value>Получает или устанавливает количество строк.</value>
  </data>
  <data name="Pdf417EncoderRowsDisplayName" xml:space="preserve">
    <value>Строки</value>
  </data>
  <data name="QRCodeEncoderApplicationIndicatorDescr" xml:space="preserve">
    <value>Получает или устанавливает индикатор приложения.</value>
  </data>
  <data name="QRCodeEncoderApplicationIndicatorDisplayName" xml:space="preserve">
    <value>Индикатор применения</value>
  </data>
  <data name="QRCodeEncoderECIDescr" xml:space="preserve">
    <value>Получает или устанавливает режим расширенного интерпретации канала (ECI).</value>
  </data>
  <data name="QRCodeEncoderECIDisplayName" xml:space="preserve">
    <value>ECI</value>
  </data>
  <data name="QRCodeEncoderECLDescr" xml:space="preserve">
    <value>Получает или устанавливает уровень коррекции ошибок.</value>
  </data>
  <data name="QRCodeEncoderECLDisplayName" xml:space="preserve">
    <value>Уровень коррекции ошибок</value>
  </data>
  <data name="QRCodeEncoderFNC1Descr" xml:space="preserve">
    <value>Получает или устанавливает режим FNC1.</value>
  </data>
  <data name="QRCodeEncoderFNC1DisplayName" xml:space="preserve">
    <value>FNC1</value>
  </data>
  <data name="QRCodeEncoderModeDescr" xml:space="preserve">
    <value>Определяет наборы допустимых символов: числа, символы и т.д.</value>
  </data>
  <data name="QRCodeEncoderModeDisplayName" xml:space="preserve">
    <value>Режим</value>
  </data>
  <data name="QRCodeEncoderVersionDescr" xml:space="preserve">
    <value>Получает или устанавливает версию кода.</value>
  </data>
  <data name="QRCodeEncoderVersionDisplayName" xml:space="preserve">
    <value>Версия</value>
  </data>
  <data name="QuietZoneDisplayName" xml:space="preserve">
    <value>Тихая зона</value>
  </data>
  <data name="ValidateBillDataDisplayName" xml:space="preserve">
    <value>Проверка данных билла</value>
  </data>
  <data name="ValueFromBillDataDisplayName" xml:space="preserve">
    <value>Значение данных Билла</value>
  </data>
</root>