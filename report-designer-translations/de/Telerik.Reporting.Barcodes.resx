<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BillDataCreditorDescr" xml:space="preserve">
    <value>Ruft den Wert ab, der die Datenstruktur "Creditor/Payable To" darstellt.</value>
  </data>
  <data name="BillDataDebtorDescr" xml:space="preserve">
    <value>Ruft den Wert ab, der die Datenstruktur "Schuldner/Zahlbar nach" darstellt.</value>
  </data>
  <data name="BillDataPaymentAdditionalInfoDescr" xml:space="preserve">
    <value>Ruft die zusätzlichen Informationen zur Zahlung ab oder legt sie fest.</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure1Descr" xml:space="preserve">
    <value>Ruft die Informationen für die alternative Prozedur 1 ab oder legt sie fest.</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure2Descr" xml:space="preserve">
    <value>Ruft die Informationen für alternative Prozedur 2 ab oder legt sie fest.</value>
  </data>
  <data name="BillDataPaymentAmountDescr" xml:space="preserve">
    <value>Ruft den Rechnungsbetrag ab oder legt den Rechnungsbetrag fest.</value>
  </data>
  <data name="BillDataPaymentCurrencyDescr" xml:space="preserve">
    <value>Ruft die in der Rechnung verwendete Währung ab oder legt sie fest. Unterstützte Werte: CHF/EUR. Standardwert: CHF.</value>
  </data>
  <data name="BillDataPaymentReferenceDescr" xml:space="preserve">
    <value>Ruft die Zahlungsreferenznummer ab oder legt sie fest. Es kann null sein, wenn der Referenztyp auf NON festgelegt ist.</value>
  </data>
  <data name="BillDataPaymentReferenceTypeDescr" xml:space="preserve">
    <value>Ruft den Typ der Zahlungsreferenznummer ab oder legt sie fest. Unterstützte Werte: QRR/SCOR/NON. Standardwert: NON.</value>
  </data>
  <data name="BillDataPaymentStructuredBillInfoDescr" xml:space="preserve">
    <value>Ruft die codierten Informationen für die automatisierte Buchung der Zahlung ab oder legt sie fest.</value>
  </data>
  <data name="BillDataPaymentDescr" xml:space="preserve">
    <value>Ruft den Wert ab, der die Datenstruktur "Zahlungsinformationen" darstellt.</value>
  </data>
  <data name="BillDataPersonAddressDescr" xml:space="preserve">
    <value>Ruft die Adressinformationen für den Gläubiger/Schuldner ab oder legt sie fest.</value>
  </data>
  <data name="BillDataPersonNameDescr" xml:space="preserve">
    <value>Ruft den Namen des Gläubigers/Schuldners ab oder legt ihn fest.</value>
  </data>
  <data name="BillDataDescr" xml:space="preserve">
    <value>Ruft die Klasse ab, die die Datenfelder darstellt, die zum Erstellen eines Barcodes erforderlich sind, der in einem Schweizer QR-Rechnungsentwurf verwendet wird.</value>
  </data>
  <data name="QuietZoneDescr" xml:space="preserve">
    <value>Ruft einen Wert ab oder legt einen Wert fest, der die Größe der "ruhigen Zone" um den Barcode angibt.</value>
  </data>
  <data name="ValidateBillDataDescr" xml:space="preserve">
    <value>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Felder "Rechnungsdaten" überprüft werden sollen oder nicht.</value>
  </data>
  <data name="ValueFromBillDataDescr" xml:space="preserve">
    <value>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Barcodewert aus den Feldern Rechnungsdaten generiert wird oder nicht.</value>
  </data>
  <data name="BillDataCityDescr" xml:space="preserve">
    <value>Ruft den Stadtnamen ab oder legt er fest.</value>
  </data>
  <data name="BillDataCityDisplayName" xml:space="preserve">
    <value>Stadt</value>
  </data>
  <data name="BillDataCountryDescr" xml:space="preserve">
    <value>Ruft den Ländernamen ab oder legt er fest.</value>
  </data>
  <data name="BillDataCountryDisplayName" xml:space="preserve">
    <value>Land</value>
  </data>
  <data name="BillDataCreditorDisplayName" xml:space="preserve">
    <value>Gläubiger</value>
  </data>
  <data name="BillDataDebtorDisplayName" xml:space="preserve">
    <value>Schuldner</value>
  </data>
  <data name="BillDataDisplayName" xml:space="preserve">
    <value>Bill-Daten</value>
  </data>
  <data name="BillDataHouseNumberDescr" xml:space="preserve">
    <value>Ruft die Hausnummer für strukturierte Adresse oder Adresszeile 2 für die kombinierte Adresse ab oder legt sie fest.</value>
  </data>
  <data name="BillDataHouseNumberDisplayName" xml:space="preserve">
    <value>Hausnummer</value>
  </data>
  <data name="BillDataIBANDescr" xml:space="preserve">
    <value>Ruft die IBAN des Kontos ab, an das die Rechnung zahlbar ist, oder legt sie fest.</value>
  </data>
  <data name="BillDataIBANDisplayName" xml:space="preserve">
    <value>Iban</value>
  </data>
  <data name="BillDataIBANTypeDescr" xml:space="preserve">
    <value>Ruft den Typ der IBAN des Kontos ab, an das die Rechnung zahlbar ist, oder legt diesen fest. Unterstützte Werte: IBAN/QRIBAN. Standardwert: IBAN.</value>
  </data>
  <data name="BillDataIBANTypeDisplayName" xml:space="preserve">
    <value>IBANType</value>
  </data>
  <data name="BillDataPaymentAdditionalInfoDisplayName" xml:space="preserve">
    <value>Zusatzinformationen</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure1DisplayName" xml:space="preserve">
    <value>Alternatives Verfahren1</value>
  </data>
  <data name="BillDataPaymentAlternativeProcedure2DisplayName" xml:space="preserve">
    <value>Alternatives Verfahren2</value>
  </data>
  <data name="BillDataPaymentAmountDisplayName" xml:space="preserve">
    <value>Betrag</value>
  </data>
  <data name="BillDataPaymentCurrencyDisplayName" xml:space="preserve">
    <value>Währung</value>
  </data>
  <data name="BillDataPaymentDisplayName" xml:space="preserve">
    <value>Bezahlung</value>
  </data>
  <data name="BillDataPaymentReferenceDisplayName" xml:space="preserve">
    <value>Verweis</value>
  </data>
  <data name="BillDataPaymentReferenceTypeDisplayName" xml:space="preserve">
    <value>Referenztyp</value>
  </data>
  <data name="BillDataPaymentStructuredBillInfoDisplayName" xml:space="preserve">
    <value>Strukturierte Bill-Info</value>
  </data>
  <data name="BillDataPersonAddressDisplayName" xml:space="preserve">
    <value>Adresse</value>
  </data>
  <data name="BillDataPersonNameDisplayName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="BillDataPostalCodeDescr" xml:space="preserve">
    <value>Ruft die Postleitzahl ab oder legt sie fest.</value>
  </data>
  <data name="BillDataPostalCodeDisplayName" xml:space="preserve">
    <value>Plz</value>
  </data>
  <data name="BillDataStreetDescr" xml:space="preserve">
    <value>Ruft den Straßennamen für strukturierte Adresse oder Adresszeile 1 für die kombinierte Adresse ab oder legt sie fest.</value>
  </data>
  <data name="BillDataStreetDisplayName" xml:space="preserve">
    <value>Straße</value>
  </data>
  <data name="Encoder1DShowTextDescr" xml:space="preserve">
    <value>Gibt an, ob der Barcode den Text zusammen mit den Balken anzeigen soll.</value>
  </data>
  <data name="Encoder1DShowTextDisplayName" xml:space="preserve">
    <value>Text anzeigen</value>
  </data>
  <data name="Pdf417EncoderColumnsDescr" xml:space="preserve">
    <value>Ruft die Anzahl der Spalten ab oder legt sie fest.</value>
  </data>
  <data name="Pdf417EncoderColumnsDisplayName" xml:space="preserve">
    <value>Spalten</value>
  </data>
  <data name="Pdf417EncoderECLDescr" xml:space="preserve">
    <value>Ruft die Fehlerkorrekturstufe ab oder legt sie fest.</value>
  </data>
  <data name="Pdf417EncoderECLDisplayName" xml:space="preserve">
    <value>Fehlerkorrekturebene</value>
  </data>
  <data name="Pdf417EncoderEncodingDescr" xml:space="preserve">
    <value>Ruft den Codierungsmodus ab oder legt er fest.</value>
  </data>
  <data name="Pdf417EncoderEncodingDisplayName" xml:space="preserve">
    <value>Codierung</value>
  </data>
  <data name="Pdf417EncoderRowsDescr" xml:space="preserve">
    <value>Ruft die Anzahl der Zeilen ab oder legt sie fest.</value>
  </data>
  <data name="Pdf417EncoderRowsDisplayName" xml:space="preserve">
    <value>Zeilen</value>
  </data>
  <data name="QRCodeEncoderApplicationIndicatorDescr" xml:space="preserve">
    <value>Ruft die Anwendungsanzeige ab oder legt sie fest.</value>
  </data>
  <data name="QRCodeEncoderApplicationIndicatorDisplayName" xml:space="preserve">
    <value>Anwendungsindikator</value>
  </data>
  <data name="QRCodeEncoderECIDescr" xml:space="preserve">
    <value>Ruft den ECI-Modus (Extended Channel Interpretation) ab oder legt er fest.</value>
  </data>
  <data name="QRCodeEncoderECIDisplayName" xml:space="preserve">
    <value>Eci</value>
  </data>
  <data name="QRCodeEncoderECLDescr" xml:space="preserve">
    <value>Ruft die Fehlerkorrekturstufe ab oder legt sie fest.</value>
  </data>
  <data name="QRCodeEncoderECLDisplayName" xml:space="preserve">
    <value>Fehlerkorrekturebene</value>
  </data>
  <data name="QRCodeEncoderFNC1Descr" xml:space="preserve">
    <value>Ruft den FNC1-Modus ab oder legt er fest.</value>
  </data>
  <data name="QRCodeEncoderFNC1DisplayName" xml:space="preserve">
    <value>FNC1</value>
  </data>
  <data name="QRCodeEncoderModeDescr" xml:space="preserve">
    <value>Bestimmt die Sätze akzeptabler Symbole: Zahlen, Zeichen usw.</value>
  </data>
  <data name="QRCodeEncoderModeDisplayName" xml:space="preserve">
    <value>Modus</value>
  </data>
  <data name="QRCodeEncoderVersionDescr" xml:space="preserve">
    <value>Ruft die QR-Code-Version ab oder legt sie fest.</value>
  </data>
  <data name="QRCodeEncoderVersionDisplayName" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="QuietZoneDisplayName" xml:space="preserve">
    <value>Ruhige Zone</value>
  </data>
  <data name="ValidateBillDataDisplayName" xml:space="preserve">
    <value>Überprüfen von Bill-Daten</value>
  </data>
  <data name="ValueFromBillDataDisplayName" xml:space="preserve">
    <value>Wert aus Bill-Daten</value>
  </data>
</root>